module column_driver (pattern_in, pattern_out, enable, clk, reset);

	input logic enable clk, reset;
	input logic [15:0] pattern_in;
	output logic [15:0] pattern_out;
	
	enum {off, on} ps, ns;
	
	//Next state logic
	always_comb begin
		case(ps)
			off: if (enable) ns = on;
				  else ns = off;
			on: if (enable) ns = on;
				 else ns = off;
		endcase
	end
	
	//Output logic
	
	//DFF
	always_ff @(posedge clk) begin
		if(reset)
			ps <= off;
		else
			ps <= ns;
	end

endmodule 